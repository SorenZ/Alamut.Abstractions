namespace Alamut.Abstractions.Messaging
{
    /// <summary>
    /// provides a base contract for every message in the Messaging system
    /// it's recommended to implement this contract for every message you want to send through Messaging system
    /// </summary>
    public interface IMessage
    {
        /// <summary>
        /// provides a unique Id for the Message
        /// it would be generated by <see cref="IPublisher"> if Id does not provided 
        /// </summary>
        string Id { get; set; }

        /// <summary>
        /// indicate Publisher Event Name 
        /// </summary>
        /// <remarks>optional</remarks>
        string EventName { get; set; }

        /// <summary>
        /// indicates whether the publisher requests approval
        /// </summary>
        /// <remarks>optional</remarks>
        bool AcknowledgeRequested { get; set; }
        
        /// <summary>
        /// defines the Topic that the AcknowledgeMessage should be published on it
        /// </summary>
        /// <remarks>optional</remarks>
        string AcknowledgeTopic { get; set; }
    }
}